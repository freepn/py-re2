name: ci

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
      MACOSX_DEPLOYMENT_TARGET: "10.9"
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('requirements-test.txt') }}

    - name: Prepare compiler environment for Windows
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: Update vcpkg
      run: |
        cd C:\vcpkg
        git pull
        .\\bootstrap-vcpkg.bat
      if: startsWith(matrix.os, 'win')

    - name: Install deps with vcpkg
      run: |
        vcpkg install re2:x64-windows
        vcpkg integrate install
      if: startsWith(matrix.os, 'win')

    - name: Install deps with brew
      run: |
        brew install -s re2
        brew install ninja
      if: startsWith(matrix.os, 'mac')
    - name: Install PPA and build deps
      if: runner.os == 'Linux'
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y software-properties-common
        sudo add-apt-repository -y -s ppa:nerdboy/embedded
        sudo apt-get install -y libre2-dev ninja-build
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install nose twine build -rrequirements.txt
    # This makes msvc and vcpkg environment variables available in the following step(s)
    - name: Set Windows environment variables
      if: runner.os == 'Windows'
      run: |
        .github/workflows/vs_env.bat x64
        source env.sh
        echo "CMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake" >> $GITHUB_ENV
        echo "PYTHONPATH=${PYTHONPATH}:$GITHUB_WORKSPACE/" >> $GITHUB_ENV
    - name: Run tests
      run: |
        python setup.py egg_info
        python setup.py build_ext --inplace --build-type RelWithDebInfo
        nosetests -sx tests/re2_test.py
        nosetests -sx tests/test_re.py
