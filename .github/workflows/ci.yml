name: pip

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

jobs:
  make_dist:
    name: Make distributions
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: actions/setup-python@v2

    - name: Install python requirements
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install build

    - name: Build files
      run: |
        python -m build -s

    - uses: actions/upload-artifact@v2
      with:
        path: dist/*

  build:
    name: Build with Pip
    needs: [make_dist]
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, macos-latest, ubuntu-20.04]
        python-version: [3.6, 3.7, 3.8, 3.9]

    runs-on: ${{ matrix.platform }}
    defaults:
      run:
        shell: bash

    steps:
    - uses: actions/checkout@v2

    - uses: actions/download-artifact@v2
      with:
        name: artifact
        path: dist

    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Add requirements
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install cython scikit-build

    # Eventually Microsoft might have an action for setting up
    # MSVC, but for now, this action works:
    - name: Prepare compiler environment for Windows
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: Update vcpkg
      if: runner.os == 'Windows'
      run: |
        cd C:\vcpkg
        git pull
        .\\bootstrap-vcpkg.bat

    - name: Install deps with vcpkg
      if: runner.os == 'Windows'
      run: |
        vcpkg install re2:x64-windows

    - name: Install macos deps with brew
      if: runner.os == 'macOS'
      run: |
        brew install re2
        brew install ninja

    - name: Install Ubuntu build deps
      if: runner.os == 'Linux'
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y software-properties-common
        sudo add-apt-repository -y -s ppa:nerdboy/embedded
        sudo apt-get install -y libre2-dev ninja-build

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install tox

    - name: Set Windows environment variables
      if: runner.os == 'Windows'
      run: |
        .github/workflows/vs_env.bat x64
        source env.sh
        echo "CMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake" >> $GITHUB_ENV

    - name: Build and install
      run: |
        pip install --verbose . --find-links ${{ github.workspace }}/dist

    - name: Run tests
      run: |
        pip install nose
        nosetests -sx tests/re2_test.py
        nosetests -sx tests/test_re.py
