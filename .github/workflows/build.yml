name: Build

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} for Python
    runs-on: ${{ matrix.os }}
    env:
      MANYLINUX2010_X86_64_TAG: "2020-12-03-912b0de"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-latest]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: 3.7

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==1.7.1

      - name: Install Visual C++ for Python 2.7
        if: runner.os == 'Windows'
        run: |
          choco install vcpython27 -f -y

      - name: Build wheels
        env:
          CIBW_BEFORE_ALL_LINUX: >
            yum -y -q --enablerepo=extras install epel-release
            && yum install -y re2-devel
          CIBW_BEFORE_ALL_MACOS: brew install re2
          CIBW_BUILD: cp36-* cp37-* cp38-*
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Build sdist
        run: |
          pip install --user cython
          python setup.py sdist

  check_artifacts:
    name: Check artifacts are correct
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - uses: actions/download-artifact@v2
        with:
          name: wheels
          
      - name: Display structure of downloaded artifacts
        run: .github/workflows/wheel-check.sh

  do_release:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-20.04
    # upload to PyPI on every tag starting with 'v'
    # if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - uses: actions/download-artifact@v2
        with:
          name: wheels

      - name: install gitchangelog
        run: |
          pip install git+https://github.com/freepn/gitchangelog@3.0.4-2

      - name: generate change file
        run: |
          bash -c 'gitchangelog $(git tag -l | tail -n2 | head -n1)..$(git describe --abbrev=0) > CHANGES.md'

      - name: create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: CHANGES.md
          draft: false
          prerelease: false
          files: *.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
